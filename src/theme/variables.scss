// Ionic Variables and Theming. For more info, please see:
// http://ionicframework.com/docs/v2/theming/
$font-path: "../assets/fonts";

@import "ionic.globals";


// Shared Variables
// --------------------------------------------------
// To customize the look and feel of this app, you can override
// the Sass variables found in Ionic's source scss files.
// To view all the possible Ionic variables, see:
// http://ionicframework.com/docs/v2/theming/overriding-ionic-variables/




// Named Color Variables
// --------------------------------------------------
// Named colors makes it easy to reuse colors on various components.
// It's highly recommended to change the default colors
// to match your app's branding. Ionic uses a Sass map of
// colors so you can add, rename and remove colors as needed.
// The "primary" color is the only required color in the map.

$colors: (
  primary:    #06d977,
  secondary:  #2c7feb,
  danger:     #f53d3d,
  light:      #f4f4f4,
  dark:       #222,
  lightdark:  #b9b9b9,
  pearl:      #ffffff,
  warning: #FFC107,
  success: rgb(100, 201, 100)

);


// App iOS Variables
// --------------------------------------------------
// iOS only Sass variables can go here




// App Material Design Variables
// --------------------------------------------------
// Material Design only Sass variables can go here




// App Windows Variables
// --------------------------------------------------
// Windows only Sass variables can go here




// App Theme
// --------------------------------------------------
// Ionic apps can have different themes applied, which can
// then be future customized. This import comes last
// so that the above variables are used and Ionic's
// default are overridden.

@import "ionic.theme.default";


// Ionicons
// --------------------------------------------------
// The premium icon font for Ionic. For more info, please see:
// http://ionicframework.com/docs/v2/ionicons/

@import "ionic.ionicons";


// Fonts
// --------------------------------------------------

@import "roboto";
@import "noto-sans";

$toolbar-background: rgb(0, 45, 129);
body {
  font-family: 'Lato-Regular';
}
.no-scroll .scroll-content {
    overflow: hidden;
}
.toolbar {
  border-bottom: 1px solid color($colors, light);
  .toolbar-title {
    font-size: 1.5rem !important;
    color: white;
  }
  ion-icon {
    font-size: 2.5rem !important;
  }
}

/* clear android input focus... */
 .item-md.item-input.input-has-focus .item-inner {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }

 .list-md .item-input.input-has-focus:last-child {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }

 .list-md .item-input.input-has-focus:last-child .item-inner {
   box-shadow: none;
 }

 .item-md.item-input.ng-valid.input-has-value:not(.input-has-focus) .item-inner {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }

 .list-md .item-input.ng-valid.input-has-value:not(.input-has-focus):last-child {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }

 .list-md .item-input.ng-valid.input-has-value:not(.input-has-focus):last-child .item-inner {
   box-shadow: none;
 }

 .item-md.item-input.ng-invalid.ng-touched:not(.input-has-focus) .item-inner {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }

 .list-md .item-input.ng-invalid.ng-touched:not(.input-has-focus):last-child {
   border-bottom-color: transparent !important;
   box-shadow: none !important;
 }
